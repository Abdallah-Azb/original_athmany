androidx.core.widget.NestedScrollView
androidx.window.R$styleable: int ActivityRule_alwaysExpand
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: void invoke(int)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.R$styleable: int GradientColor_android_endX
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.GestureDetectorCompat
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
io.sentry.Session$State: Session$State(java.lang.String,int)
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: void invoke(long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.embedding.android.FlutterTextureView
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback getBeforeBreadcrumb()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
io.sentry.DataCategory: java.lang.String getCategory()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.window.embedding.ActivityFilter
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] values()
androidx.activity.ComponentActivity$2
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleBreadcrumbs
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostStarted(android.app.Activity)
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
io.sentry.SentryOptions: java.lang.String getDsn()
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
io.sentry.flutter.SentryFlutterPlugin: void captureEnvelope(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
kotlin.jvm.internal.FunctionReference: int hashCode()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: SentryFlutterPlugin$initNativeSdk$2$2(io.sentry.android.core.SentryAndroidOptions)
androidx.window.embedding.ActivityStack: java.lang.String toString()
io.sentry.SentryOptions: io.sentry.ITransportFactory getTransportFactory()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.appcompat.view.menu.ListMenuItemView
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.sentry.flutter.R$id: int accessibility_custom_action_13
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
androidx.window.core.Version: int minor
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
io.sentry.protocol.DebugImage: java.util.Map getUnknown()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.sentry.flutter.SentryFlutterPluginKt: void access$getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
io.flutter.embedding.android.FlutterView
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
io.sentry.flutter.R$attr: int finishPrimaryWithSecondary
androidx.lifecycle.DefaultLifecycleObserver
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: SentryFlutterPlugin$initNativeSdk$2$6(io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
io.sentry.protocol.DebugImage: DebugImage()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.sentry.flutter.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.flutter.R$id: int blocking
io.sentry.SentryOptions: void setSessionTrackingIntervalMillis(long)
androidx.window.R$attr
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
io.sentry.flutter.R$id: R$id()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4
io.sentry.flutter.R$id: int info
io.sentry.flutter.SentryFlutterPlugin: void setTag(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MICROSECOND
io.sentry.flutter.SentryFlutterPlugin: void loadImageList(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.MeasurementUnit$Information: MeasurementUnit$Information(java.lang.String,int)
io.sentry.protocol.DebugImage: java.lang.String codeFile
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
io.sentry.SentryOptions: boolean isEnableShutdownHook()
androidx.window.java.R: R()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
io.sentry.flutter.R$attr: int finishSecondaryWithPrimary
io.sentry.flutter.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.flutter.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.sentry.android.core.SentryAndroidOptions: void setEnableUserInteractionBreadcrumbs(boolean)
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information BYTE
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.sentry.flutter.R$id: int forever
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
io.sentry.flutter.R$attr: int activityName
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.window.layout.WindowMetricsCalculator$Companion
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
io.sentry.SpanStatus: io.sentry.SpanStatus DEADLINE_EXCEEDED
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
io.sentry.SentryOptions: void addTracingOrigin(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: SentryFlutterPlugin$initNativeSdk$2$1(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.R$id: int accessibility_custom_action_7
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
io.sentry.SentryOptions: void setLogger(io.sentry.ILogger)
io.sentry.SentryOptions: long getFlushTimeoutMillis()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
io.sentry.flutter.R$id: int accessibility_custom_action_22
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
io.sentry.flutter.R$id: int italic
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
io.sentry.SentryOptions: void setMaxSpans(int)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.core.Bounds: int hashCode()
io.sentry.SentryOptions: void setAttachStacktrace(boolean)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
io.sentry.SentryItemType: io.sentry.SentryItemType[] $VALUES
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] values()
androidx.appcompat.app.AppCompatActivity
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivityForConfigChanges()
io.sentry.Session$State: io.sentry.Session$State[] $VALUES
io.sentry.SentryOptions: void addScopeObserver(io.sentry.IScopeObserver)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.sentry.SentryOptions: void setEnableUncaughtExceptionHandler(boolean)
io.sentry.flutter.R$styleable: int FontFamilyFont_fontWeight
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
io.sentry.flutter.R$styleable: int[] GradientColor
io.sentry.flutter.R$dimen: int compat_button_padding_vertical_material
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
kotlinx.coroutines.LazyStandaloneCoroutine
com.google.android.gms.internal.location.zzo: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$dimen: int notification_small_icon_size_as_large
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] values()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
kotlinx.coroutines.EventLoopImplBase
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
io.sentry.flutter.R$id: int tag_on_receive_content_mime_types
kotlinx.coroutines.JobNode
io.sentry.flutter.R$drawable: R$drawable()
io.sentry.SentryItemType: io.sentry.SentryItemType Transaction
androidx.window.core.Bounds: int getTop()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information BIT
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
io.sentry.SentryOptions: io.sentry.ILogger getLogger()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
io.sentry.flutter.R$attr: int splitLayoutDirection
io.sentry.SentryOptions: io.sentry.ISentryExecutorService executorService
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
kotlinx.coroutines.internal.LockFreeTaskQueue
androidx.window.core.Version: int major
io.sentry.SentryOptions: boolean isAttachServerName()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
io.sentry.android.ndk.SentryNdk: void initSentryNative(io.sentry.android.core.SentryAndroidOptions)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.window.layout.WindowMetrics
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.ScrollingTabContainerView
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.sentry.android.core.SentryAndroidOptions: boolean enableAppComponentBreadcrumbs
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.flutter.R$attr: int alpha
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashDurationThresholdMillis()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
io.sentry.SentryOptions: long shutdownTimeoutMillis
io.sentry.SentryOptions: void setAttachThreads(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.sentry.android.core.SentryAndroidOptions
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
io.sentry.flutter.R$id: int accessibility_custom_action_15
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: java.lang.Object invoke(java.lang.Object)
io.sentry.protocol.DebugImage: java.lang.String access$002(io.sentry.protocol.DebugImage,java.lang.String)
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.fragment.app.FragmentManagerViewModel
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.sentry.SentryOptions: java.lang.Double profilesSampleRate
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: io.sentry.flutter.SentryFlutterPlugin this$0
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
io.sentry.flutter.R$dimen: int compat_control_corner_material
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
io.sentry.flutter.R$styleable: int GradientColor_android_endY
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.google.android.gms.common.util.DynamiteApi
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
kotlinx.coroutines.StandaloneCoroutine
io.sentry.flutter.R$color: R$color()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback beforeSend
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
io.sentry.flutter.SentryFlutterPluginKt
io.sentry.flutter.R$id: int tag_window_insets_animation_callback
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
io.sentry.flutter.R$attr: int fontProviderFetchTimeout
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.android.gms.common.annotation.KeepName
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
io.sentry.protocol.Device$DeviceOrientation: Device$DeviceOrientation(java.lang.String,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.sentry.android.core.SentryAndroidOptions: boolean enableAppLifecycleBreadcrumbs
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
io.sentry.flutter.R$id: int accessibility_custom_action_25
io.sentry.flutter.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.widget.AlertDialogLayout
io.sentry.SentryLevel: io.sentry.SentryLevel DEBUG
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15
androidx.core.app.RemoteActionCompatParcelizer
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: io.sentry.android.core.SentryAndroidOptions $options
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.sentry.SentryOptions: void setEnableScopeSync(boolean)
androidx.window.R$styleable: R$styleable()
io.sentry.flutter.R$attr: int splitRatio
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: SentryFlutterPlugin$initNativeSdk$2$7(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5
androidx.window.embedding.SplitController: SplitController()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.sentry.flutter.SentryFlutterPlugin: void beginNativeFrames(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.appcompat.widget.ActionBarContainer
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.lifecycle.ProcessLifecycleOwnerInitializer: ProcessLifecycleOwnerInitializer()
io.sentry.protocol.DebugImage: java.lang.Long access$702(io.sentry.protocol.DebugImage,java.lang.Long)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.sentry.flutter.R$id: int accessibility_custom_action_24
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView
io.sentry.SentryOptions: io.sentry.ISentryExecutorService getExecutorService()
io.sentry.protocol.DebugImage: void setType(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.annotation.Keep
io.sentry.SentryLevel
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: void invoke(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
io.sentry.SpanStatus
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.sentry.flutter.R$id: int accessibility_custom_action_4
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_OBJECT
io.sentry.flutter.R$id: int tag_accessibility_actions
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: void invoke(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: io.sentry.protocol.SdkVersion createSdkVersion()
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder getClientReportRecorder()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin: void removeExtra(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.window.core.Bounds: int left
androidx.window.layout.SidecarCompat$DistinctElementCallback
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.appcompat.widget.ActionBarContextView
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.sentry.android.core.SentryPerformanceProvider
io.sentry.SentryOptions: void setTracingOrigins(java.util.List)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleTracingAutoFinish(boolean)
io.sentry.SentryOptions: io.sentry.ITransportFactory transportFactory
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: void invoke(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: SentryFlutterPlugin$initNativeSdk$2$5(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status[] values()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
androidx.window.layout.SidecarCompat
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
kotlin.jvm.internal.FunctionReference: int arity
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.SentryOptions: void setAttachServerName(boolean)
io.sentry.flutter.R$styleable: int[] GradientColorItem
androidx.window.layout.FoldingFeature$State$Companion
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
io.sentry.flutter.R$style: int Widget_Compat_NotificationActionContainer
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.sentry.android.core.internal.util.ConnectivityChecker$Status: ConnectivityChecker$Status(java.lang.String,int)
io.sentry.protocol.DebugImage: java.lang.String access$102(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
io.sentry.SentryOptions: boolean traceSampling
io.sentry.SentryOptions: void setIdleTimeout(java.lang.Long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] values()
androidx.window.core.Version: int patch
androidx.window.R$styleable: int[] ActivityFilter
io.sentry.flutter.R$drawable: int notification_bg_normal_pressed
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.sentry.SentryOptions: java.lang.String dist
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.sentry.SentryOptions: java.lang.String getServerName()
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
io.sentry.flutter.R$styleable: int GradientColor_android_tileMode
io.sentry.SpanStatus: io.sentry.SpanStatus RESOURCE_EXHAUSTED
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.recyclerview.widget.RecyclerView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.sentry.flutter.R$styleable: int FontFamilyFont_android_fontStyle
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11
androidx.core.app.CoreComponentFactory
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.sentry.protocol.DebugImage: java.lang.String imageAddr
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.location.zzm: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
io.sentry.protocol.DebugImage: java.lang.String access$802(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory sslSocketFactory
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
io.sentry.SentryOptions: void setProguardUuid(java.lang.String)
io.sentry.SentryOptions: void setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
io.sentry.SpanStatus: io.sentry.SpanStatus NOT_FOUND
kotlinx.coroutines.ChildHandleNode
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
io.sentry.protocol.Device$DeviceOrientation
io.sentry.flutter.R$id: int action_container
io.sentry.SentryOptions: void setDebug(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.sentry.flutter.R$id: int accessibility_custom_action_27
io.sentry.SentryOptions: java.util.List getIntegrations()
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.android.FlutterSplashView$SavedState
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.window.R$attr: int clearTop
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
com.sunmi.peripheral.printer.SystemPropertyUtil: java.lang.String get(java.lang.String)
io.sentry.android.ndk.SentryNdk: void init(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: void invoke(boolean)
io.sentry.SentryOptions$RequestSize: SentryOptions$RequestSize(java.lang.String,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
io.sentry.SentryOptions: void addIntegration(io.sentry.Integration)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader getDebugImagesLoader()
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information EXABYTE
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: void invoke(boolean)
io.sentry.MeasurementUnit$Information: java.lang.String apiName()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource[] $VALUES
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
kotlinx.coroutines.scheduling.LimitingDispatcher
androidx.window.layout.ExtensionWindowLayoutInfoBackend
io.sentry.SentryOptions: java.lang.String getSentryClientName()
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
io.sentry.SentryOptions: void setDist(java.lang.String)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
io.sentry.SentryLevel: io.sentry.SentryLevel valueOf(java.lang.String)
io.sentry.flutter.R$id: int right_side
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.SentryOptions: void setDistinctId(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitRule: int getMinWidth()
io.sentry.flutter.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.sentry.flutter.R$attr: int queryPatterns
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
androidx.window.layout.DisplayFeature
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: SentryFlutterPlugin$initNativeSdk$2$9(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: SentryFlutterPlugin$initNativeSdk$2$3(io.sentry.android.core.SentryAndroidOptions)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.sentry.flutter.R$styleable: int ColorStateListItem_alpha
io.sentry.DataCategory
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.R$attr: int splitMinWidth
androidx.lifecycle.ProcessLifecycleOwner: ProcessLifecycleOwner()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.sentry.flutter.R$id: int normal
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
io.sentry.SentryOptions: int getMaxQueueSize()
io.sentry.flutter.R$styleable: int[] Capability
io.sentry.flutter.R$dimen: int notification_right_icon_size
androidx.window.layout.WindowMetrics: int hashCode()
io.sentry.flutter.R$attr: int font
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.sentry.flutter.R$id: int accessibility_custom_action_11
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
io.sentry.flutter.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.AppCompatEditText
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
io.sentry.SpanStatus: io.sentry.SpanStatus INTERNAL_ERROR
io.sentry.android.core.SentryAndroidOptions: void setAnrEnabled(boolean)
io.sentry.flutter.R$attr: int ttcIndex
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$layout
io.sentry.SentryOptions: io.sentry.clientreport.IClientReportRecorder clientReportRecorder
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
io.sentry.SentryOptions: java.lang.String getOutboxPath()
io.sentry.protocol.DebugImage: java.lang.String getArch()
io.sentry.flutter.R$styleable: int[] SplitPairFilter
io.sentry.SentryOptions: void addIgnoredExceptionForType(java.lang.Class)
androidx.window.R: R()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10
io.sentry.SentryLevel: io.sentry.SentryLevel ERROR
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.sentry.flutter.R$id: int dialog_button
io.sentry.flutter.R$styleable: int GradientColor_android_startX
androidx.appcompat.widget.FitWindowsFrameLayout
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: void invoke(boolean)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
io.sentry.SentryOptions: java.lang.String getProguardUuid()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
io.sentry.android.core.SentryAndroidOptions: boolean isCollectAdditionalContext()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.StaggeredGridLayoutManager
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
io.sentry.SpanStatus: io.sentry.SpanStatus CANCELLED
io.sentry.protocol.DebugImage: java.lang.String arch
io.sentry.flutter.SentryFlutterPlugin: io.sentry.SentryEvent initNativeSdk$lambda-1$lambda-0(io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.SentryAndroidOptions,io.sentry.SentryEvent,io.sentry.Hint)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.sentry.protocol.DebugImage: java.lang.String PROGUARD
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.Toolbar: void setLogo(int)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.sentry.SentryOptions: int maxCacheItems
io.sentry.flutter.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
io.sentry.SentryOptions: void setSentryClientName(java.lang.String)
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache getEnvelopeDiskCache()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason SAMPLE_RATE
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: SentryFlutterPlugin$initNativeSdk$2$18(io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.SentryAndroidOptions)
kotlinx.coroutines.channels.Receive
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.R$styleable
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.sentry.flutter.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.window.core.ExperimentalWindowApi
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.window.core.Bounds: int getHeight()
io.sentry.SentryOptions: io.sentry.IEnvelopeReader envelopeReader
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information MEGABYTE
androidx.window.layout.WindowInfoTracker
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status NO_PERMISSION
io.sentry.protocol.DebugImage: void setDebugFile(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.sentry.flutter.R$styleable: int FontFamilyFont_fontStyle
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.window.layout.WindowInfoTrackerDecorator
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.SentryOptions: boolean enableDeduplication
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.window.core.Version
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlinx.coroutines.channels.Send
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback tracesSampler
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
io.sentry.SentryOptions: void setMaxQueueSize(int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.sentry.flutter.SentryFlutterPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
io.sentry.SentryOptions: void addEventProcessor(io.sentry.EventProcessor)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: SentryFlutterPlugin$initNativeSdk$2$14(io.sentry.android.core.SentryAndroidOptions)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
io.sentry.flutter.SentryFlutterPlugin: java.lang.String flutterSdk
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
io.sentry.SentryOptions: io.sentry.IEnvelopeReader getEnvelopeReader()
io.sentry.android.core.internal.util.ConnectivityChecker$Status
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
io.sentry.flutter.SentryFlutterPlugin: java.lang.ref.WeakReference activity
io.sentry.SentryOptions: long getMaxTraceFileSize()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
io.sentry.SentryOptions: java.util.List tracePropagationTargets
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
io.sentry.protocol.DebugImage: java.lang.String access$202(io.sentry.protocol.DebugImage,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.sentry.flutter.R$attr: int fontProviderFetchStrategy
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
io.sentry.SentryOptions: java.lang.Double getSampleRate()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
io.sentry.flutter.R$dimen: int notification_big_circle_margin
io.sentry.android.core.SentryAndroidOptions: long getAnrTimeoutIntervalMillis()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize valueOf(java.lang.String)
io.sentry.SentryOptions: void setEnableDeduplication(boolean)
io.sentry.flutter.R$id: int tag_on_receive_content_listener
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
io.sentry.protocol.DebugImage: void setCodeId(java.lang.String)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.sentry.flutter.R$id: int tag_screen_reader_focusable
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.sunmi.peripheral.printer.SystemPropertyUtil: java.lang.String getProperty(java.lang.String,java.lang.String)
io.sentry.SentryOptions: java.lang.String sentryClientName
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
io.sentry.flutter.R$id: int accessibility_custom_action_6
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: void invoke(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.window.layout.WindowLayoutInfo
io.sentry.flutter.R$id: int accessibility_custom_action_29
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.sentry.flutter.SentryFlutterPlugin: io.flutter.plugin.common.MethodChannel channel
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Bounds
io.sentry.SentryItemType: io.sentry.SentryItemType Session
io.sentry.flutter.R$id: int actions
com.google.android.gms.common.internal.ReflectedParcelable
io.sentry.SentryOptions: java.lang.String release
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.google.android.gms.signin.internal.zaj: android.os.Parcelable$Creator CREATOR
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] $VALUES
androidx.window.R$id: R$id()
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
io.sentry.SentryLevel: SentryLevel(java.lang.String,int)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.SplitController$Companion
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
io.sentry.flutter.SentryFlutterPlugin: boolean autoPerformanceTrackingEnabled
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
io.sentry.SentryItemType: io.sentry.SentryItemType[] values()
androidx.window.R$attr: int alwaysExpand
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
io.sentry.flutter.R$id: int async
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information MEBIBYTE
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
io.sentry.android.core.SentryAndroidOptions: boolean enableFramesTracking
io.sentry.flutter.R$dimen
io.sentry.flutter.R$color: int notification_action_color_filter
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
io.sentry.SentryOptions: void setEnableExternalConfiguration(boolean)
io.sentry.SentryOptions: void setEnvelopeReader(io.sentry.IEnvelopeReader)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.lifecycle.ProcessLifecycleOwner$3
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
io.sentry.SentryOptions: java.lang.Long idleTimeout
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
io.sentry.android.core.SentryAndroidOptions: boolean enableUserInteractionBreadcrumbs
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
io.sentry.SentryOptions: boolean isAttachThreads()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.window.embedding.MatcherUtils
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
io.sentry.MeasurementUnit$Information
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.SpanStatus: io.sentry.SpanStatus INVALID_ARGUMENT
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
io.sentry.flutter.R$attr: int clearTop
io.sentry.android.core.SentryAndroidOptions: int getProfilingTracesHz()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.gms.location.zzj: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9
io.sentry.flutter.R$styleable: int FontFamilyFont_fontVariationSettings
io.sentry.protocol.Device$DeviceOrientation: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$3$1
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
io.sentry.SentryOptions: boolean isProfilingEnabled()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
kotlinx.coroutines.channels.ArrayChannel
io.sentry.SpanStatus: io.sentry.SpanStatus UNAVAILABLE
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
io.sentry.SentryOptions: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
io.sentry.flutter.R$styleable: int GradientColor_android_endColor
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information GIGABYTE
io.sentry.protocol.DebugImage
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.R$color: int androidx_core_secondary_text_default_material_light
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.sentry.SentryOptions: void setEnvironment(java.lang.String)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
io.sentry.SpanStatus: int minHttpStatusCode
io.sentry.SentryOptions: java.util.List observers
io.sentry.protocol.TransactionNameSource
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.sentry.flutter.SentryFlutterPlugin: java.lang.String nativeSdk
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
io.sentry.flutter.R$dimen: int notification_main_column_padding_top
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NULL
io.sentry.DataCategory: io.sentry.DataCategory valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: void setDebugImagesLoader(io.sentry.android.core.IDebugImagesLoader)
androidx.window.embedding.SplitPairRule: java.util.Set filters
io.sentry.SentryOptions: java.util.List inAppIncludes
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: SentryFlutterPlugin$initNativeSdk$2$4(io.sentry.android.core.SentryAndroidOptions)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
io.sentry.Session$State
io.sentry.flutter.R$attr: int fontProviderCerts
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] $VALUES
io.sentry.DataCategory: io.sentry.DataCategory Security
androidx.recyclerview.widget.RecyclerView: int getBaseline()
io.sentry.SentryOptions: void setTraceSampling(boolean)
com.google.android.gms.common.internal.zzb: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: SentryFlutterPlugin$initNativeSdk$2$13(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.sentry.flutter.R$styleable: int GradientColor_android_startColor
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: void invoke(boolean)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
io.sentry.SentryOptions: void setEnableShutdownHook(boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_ARRAY
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.google.android.gms.internal.location.zzad: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.SentryFlutterPlugin: void access$setFramesTracker$p(io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.ActivityFramesTracker)
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityStopped(android.app.Activity)
io.sentry.protocol.DebugImage: java.lang.String debugFile
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
kotlinx.coroutines.JobSupport
io.sentry.SentryOptions: java.lang.String cacheDirPath
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information GIBIBYTE
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion sdkVersion
io.sentry.protocol.DebugImage: void setUuid(java.lang.String)
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize maxRequestBodySize
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status UNKNOWN
io.sentry.flutter.R$attr: int splitMinWidth
io.sentry.flutter.R$id: int accessibility_custom_action_31
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
io.sentry.flutter.R$id: int accessibility_custom_action_14
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.sentry.flutter.R$styleable: R$styleable()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: void invoke(boolean)
io.sentry.SentryOptions: void setProfilingEnabled(boolean)
io.sentry.flutter.R$attr: int fontProviderAuthority
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$layout: int notification_template_custom_big
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
io.sentry.android.core.SentryAndroidOptions: boolean collectAdditionalContext
kotlin.jvm.internal.CallableReference: java.lang.String getName()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason QUEUE_OVERFLOW
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.window.R$id: int rtl
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.sentry.flutter.SentryFlutterPlugin: void removeContexts(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: io.sentry.SentryLevel getDiagnosticLevel()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration NANOSECOND
io.sentry.SentryOptions: SentryOptions()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
io.sentry.SentryOptions: void setTag(java.lang.String,java.lang.String)
io.sentry.flutter.R$styleable: int FontFamilyFont_font
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: SentryFlutterPlugin$initNativeSdk$2$16(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: java.lang.Object invoke(java.lang.Object)
io.sentry.protocol.DebugImage: java.lang.String access$302(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
io.sentry.SentryLevel: io.sentry.SentryLevel[] values()
io.sentry.SentryOptions: void setShutdownTimeoutMillis(long)
io.sentry.SentryOptions: void setTransportFactory(io.sentry.ITransportFactory)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource CUSTOM
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
io.sentry.flutter.R$color: int androidx_core_ripple_material_light
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.sentry.flutter.R$dimen: int notification_small_icon_background_padding
io.sentry.SentryOptions: boolean printUncaughtStackTrace
io.sentry.SentryOptions: java.util.List getScopeObservers()
com.sunmi.peripheral.printer.SystemPropertyUtil: SystemPropertyUtil()
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
io.sentry.flutter.R$id: int accessibility_custom_action_26
io.sentry.SentryOptions: void setShutdownTimeout(long)
androidx.lifecycle.ProcessLifecycleOwner$3$1: void onActivityPostResumed(android.app.Activity)
io.sentry.SentryOptions: int getMaxCacheItems()
io.sentry.SentryOptions: boolean isEnableNdk()
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource ROUTE
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken STRING
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.sentry.flutter.R$id: int accessibility_custom_action_1
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information TERABYTE
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.sentry.flutter.SentryFlutterPlugin: void closeNativeSdk(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
io.sentry.flutter.R$styleable: int GradientColorItem_android_color
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
io.sentry.flutter.R$styleable: int SplitPairRule_clearTop
io.sentry.Session$State: io.sentry.Session$State[] values()
androidx.window.core.Version$Companion: Version$Companion()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.sentry.flutter.SentryFlutterPlugin: void removeTag(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: void setEnableSystemEventBreadcrumbs(boolean)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
kotlinx.coroutines.InvokeOnCancelling
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.CancellableContinuationImpl
io.sentry.flutter.R$id: int action_image
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy getProxy()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] values()
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
io.sentry.DataCategory: io.sentry.DataCategory Attachment
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
io.sentry.SentryOptions: boolean isAttachStacktrace()
androidx.window.layout.EmptyDecorator
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
io.sentry.android.core.SentryAndroidOptions: void setEnableFramesTracking(boolean)
io.sentry.android.core.SentryAndroidOptions: long startupCrashDurationThresholdMillis
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information KIBIBYTE
androidx.appcompat.widget.SearchView: int getMaxWidth()
kotlinx.coroutines.scheduling.WorkQueue
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.sentry.flutter.R$integer: R$integer()
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.window.embedding.SplitController: boolean isSplitSupported()
io.sentry.flutter.SentryFlutterPlugin: void setContexts(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.window.embedding.SplitRule: int layoutDirection
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
io.sentry.MeasurementUnit$Duration: MeasurementUnit$Duration(java.lang.String,int)
androidx.window.R$attr: int secondaryActivityName
androidx.window.layout.DisplayCompatHelperApi28
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
io.sentry.SentryItemType
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
io.sentry.SentryOptions: java.lang.String proguardUuid
androidx.window.layout.ActivityCompatHelperApi30
io.sentry.DataCategory: io.sentry.DataCategory Error
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.window.R$id
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information KILOBYTE
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason CACHE_OVERFLOW
io.sentry.flutter.R$id: int action_text
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
io.sentry.android.core.SentryAndroidOptions: boolean enableAutoActivityLifecycleTracing
io.sentry.flutter.R$attr: int secondaryActivityName
androidx.window.embedding.ActivityStack: boolean isEmpty
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.lifecycle.ProcessLifecycleOwner$3: androidx.lifecycle.ProcessLifecycleOwner this$0
io.sentry.MeasurementUnit$Fraction: java.lang.String apiName()
io.sentry.flutter.R$drawable: int notification_bg_low_pressed
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
io.sentry.SentryOptions: io.sentry.ILogger logger
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
io.sentry.flutter.R$attr
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
io.sentry.SentryOptions: java.lang.Double getTracesSampleRate()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
io.sentry.android.core.SentryAndroidOptions: boolean anrReportInDebug
io.sentry.flutter.BuildConfig: boolean DEBUG
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.appcompat.widget.AppCompatImageButton
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
io.sentry.SentryOptions: java.lang.String getCacheDirPath()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
io.sentry.SentryOptions: java.util.List inAppExcludes
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.appcompat.widget.Toolbar
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
io.sentry.SentryOptions: void setTracesSampleRate(java.lang.Double)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.sentry.SentryOptions: boolean sendDefaultPii
kotlinx.coroutines.android.AndroidDispatcherFactory
io.sentry.SentryOptions: io.sentry.SentryOptions$RequestSize getMaxRequestBodySize()
io.sentry.SentryLevel: io.sentry.SentryLevel INFO
io.sentry.flutter.R$drawable: int notification_tile_bg
io.sentry.flutter.R$dimen: int compat_button_inset_horizontal_material
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
androidx.fragment.app.Fragment$2
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation[] $VALUES
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction RATIO
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.activity.ComponentActivity$3
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information PEBIBYTE
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.flutter.R$id: int chronometer
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.lifecycle.CompositeGeneratedAdaptersObserver
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
io.sentry.Session$State: io.sentry.Session$State Ok
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.sentry.SpanStatus: io.sentry.SpanStatus UNIMPLEMENTED
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.sentry.android.core.SentryAndroidOptions: void setEnableUserInteractionTracing(boolean)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
io.sentry.flutter.R$id: int accessibility_custom_action_3
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: void invoke(boolean)
kotlinx.coroutines.channels.LinkedListChannel
kotlinx.coroutines.UndispatchedCoroutine
io.sentry.SentryOptions: void setMaxAttachmentSize(long)
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.sentry.protocol.DebugImage: java.lang.String getCodeFile()
io.sentry.SpanStatus: io.sentry.SpanStatus DATA_LOSS
io.sentry.SentryOptions: java.lang.Double getProfilesSampleRate()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.window.R$styleable: int[] ActivityRule
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.sentry.flutter.R$attr: int splitMinSmallestWidth
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ProcessLifecycleOwner$3: ProcessLifecycleOwner$3(androidx.lifecycle.ProcessLifecycleOwner)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.sentry.flutter.R$id: int tag_transition_group
androidx.window.core.Bounds: int bottom
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
kotlin.jvm.internal.CallableReference: boolean isOpen()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
io.sentry.flutter.R$id: int androidx_window_activity_scope
androidx.window.R$styleable: int SplitPairRule_splitRatio
androidx.window.R$attr: int activityAction
io.sentry.SpanStatus: SpanStatus(java.lang.String,int,int,int)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
kotlinx.coroutines.CompletedExceptionally: int _handled
io.sentry.flutter.R$id: int tag_on_apply_window_listener
io.sentry.flutter.R
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
io.sentry.android.core.SentryAndroidOptions: boolean anrEnabled
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.savedstate.SavedStateRegistry$1
io.sentry.flutter.R$string
androidx.appcompat.widget.ActionBarOverlayLayout
io.sentry.SentryOptions: void setSerializer(io.sentry.ISerializer)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] $VALUES
kotlinx.coroutines.channels.ArrayChannel: int size
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
io.sentry.flutter.SentryFlutterPlugin: void onDetachedFromActivity()
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
kotlin.jvm.internal.FunctionReference: int getArity()
io.sentry.flutter.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
io.sentry.flutter.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.window.layout.ActivityCompatHelperApi24
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.SentryOptions: void setMaxDepth(int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: void invoke(boolean)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: void invoke(boolean)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.sentry.flutter.R$id: int tag_accessibility_heading
androidx.window.embedding.MatcherUtils: MatcherUtils()
io.sentry.flutter.R$dimen: R$dimen()
androidx.window.embedding.ActivityStack: java.util.List activities
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
io.sentry.flutter.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.sentry.flutter.SentryFlutterPlugin: void addBreadcrumb(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.android.core.SentryAndroidOptions: int getProfilingTracesIntervalMillis()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAutoActivityLifecycleTracing()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.window.R$attr: int finishSecondaryWithPrimary
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
io.sentry.flutter.R$id: int right_icon
androidx.window.core.Version$bigInteger$2
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
io.sentry.flutter.R$styleable: int FontFamilyFont_android_font
androidx.window.core.Bounds: int right
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.baseflow.geolocator.GeolocatorLocationService
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.sentry.flutter.R$styleable: int GradientColor_android_centerColor
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.appcompat.widget.LinearLayoutCompat
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
io.sentry.android.core.SentryAndroidOptions: long anrTimeoutIntervalMillis
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status NOT_CONNECTED
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
io.sentry.flutter.SentryFlutterPlugin: io.sentry.android.core.ActivityFramesTracker framesTracker
io.sentry.flutter.R$color: int ripple_material_light
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.window.core.Bounds: int getLeft()
io.sentry.flutter.R$styleable: int ColorStateListItem_android_color
io.sentry.SentryOptions: boolean attachStacktrace
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.location.zzaj: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$styleable: int[] ColorStateListItem
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.R$attr: R$attr()
io.sentry.protocol.DebugImage: java.lang.String debugId
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration HOUR
androidx.window.layout.HardwareFoldingFeature
io.sentry.SentryOptions: void setTransportGate(io.sentry.transport.ITransportGate)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
io.sentry.android.core.SentryAndroidOptions: void setEnableActivityLifecycleBreadcrumbs(boolean)
androidx.lifecycle.ProcessLifecycleOwner$3$1: androidx.lifecycle.ProcessLifecycleOwner$3 this$1
io.sentry.SentryItemType: io.sentry.SentryItemType valueOfLabel(java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
io.sentry.flutter.SentryFlutterPlugin: java.lang.String androidSdk
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
io.sentry.SpanStatus: io.sentry.SpanStatus valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
io.sentry.SentryOptions: void addInAppExclude(java.lang.String)
io.sentry.SentryOptions: io.sentry.transport.ITransportGate getTransportGate()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.sentry.flutter.R$id: int accessibility_custom_action_10
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.flutter.R$dimen: int notification_large_icon_width
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.embedding.EmptyEmbeddingComponent
io.sentry.SentryOptions: io.sentry.SentryOptions empty()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.sentry.flutter.R$layout: int notification_action_tombstone
androidx.window.layout.FoldingFeature$State
androidx.window.layout.FoldingFeature$Orientation
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
io.sentry.flutter.R$dimen: int notification_content_margin_start
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
io.sentry.SentryOptions: int maxSpans
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
io.sentry.SentryOptions: java.lang.String environment
io.sentry.flutter.R$id: int title
com.sunmi.peripheral.printer.SystemPropertyUtil: void setProperty(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
io.sentry.flutter.SentryFlutterPlugin: void setExtra(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$attr: int fontProviderPackage
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.lifecycle.ViewModel: ViewModel()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: java.lang.Object invoke(java.lang.Object)
io.sentry.SentryOptions: java.lang.Double sampleRate
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend
io.sentry.flutter.R$id: int text2
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
io.flutter.embedding.engine.FlutterOverlaySurface: int id
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.sentry.SentryOptions: boolean sendClientReports
io.sentry.flutter.R$attr: int shortcutMatchRequired
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.appcompat.widget.ActionMenuView
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: void merge(io.sentry.ExternalOptions)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.sentry.SpanStatus: io.sentry.SpanStatus OK
kotlinx.coroutines.JobImpl
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
io.flutter.embedding.android.FlutterImageView
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleTracingAutoFinish()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.activity.ImmLeaksCleaner
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
io.sentry.android.core.SentryAndroidOptions: void setAttachScreenshot(boolean)
io.sentry.protocol.DebugImage: java.lang.String type
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.appcompat.widget.SearchView: int getInputType()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
io.sentry.SentryOptions$RequestSize
io.sentry.flutter.R$layout: int notification_template_icon_group
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource TASK
io.sentry.SentryOptions: int maxQueueSize
io.sentry.flutter.R$id: int accessibility_custom_action_17
io.sentry.flutter.R$styleable: int GradientColor_android_centerX
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
io.sentry.SentryOptions: void setMaxBreadcrumbs(int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1
io.sentry.SentryItemType: java.lang.String itemType
io.sentry.flutter.R$styleable: int[] ActivityFilter
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$4: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration WEEK
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk$lambda-1(java.util.Map,io.sentry.flutter.SentryFlutterPlugin,io.sentry.android.core.SentryAndroidOptions)
kotlinx.coroutines.DispatchedCoroutine
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
kotlinx.coroutines.channels.ConflatedChannel
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
io.sentry.protocol.DebugImage: java.lang.String getUuid()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.SentryOptions: void setTransactionProfiler(io.sentry.ITransactionProfiler)
io.sentry.protocol.DebugImage: java.lang.String access$602(io.sentry.protocol.DebugImage,java.lang.String)
io.sentry.SentryOptions: void setSdkVersion(io.sentry.protocol.SdkVersion)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.sentry.SentryOptions: void setEnvelopeDiskCache(io.sentry.cache.IEnvelopeCache)
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.JobCancellingNode
kotlinx.coroutines.DefaultExecutor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
io.sentry.flutter.R$dimen: int notification_action_text_size
androidx.window.embedding.ActivityRule
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
io.sentry.SentryOptions: java.util.List getTracePropagationTargets()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation valueOf(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
io.sentry.flutter.SentryFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.embedding.ActivityRule: java.util.Set filters
kotlinx.coroutines.JobSupport$Finishing
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
io.sentry.flutter.R$id: int time
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.window.R$styleable: int[] SplitPairRule
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.sentry.SpanStatus: io.sentry.SpanStatus FAILED_PRECONDITION
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.sentry.flutter.R$id: int accessibility_custom_action_30
io.sentry.android.core.SentryAndroidOptions: void setStartupCrashFlushTimeoutMillis(long)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
io.sentry.SentryOptions: void addContextTag(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
io.sentry.android.core.SentryAndroidOptions: boolean isEnableActivityLifecycleBreadcrumbs()
androidx.window.layout.FoldingFeature$OcclusionType
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
io.sentry.SentryOptions: java.util.List eventProcessors
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
io.sentry.SentryItemType: io.sentry.SentryItemType Event
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
io.sentry.SpanStatus: io.sentry.SpanStatus ABORTED
io.sentry.SentryOptions: long sessionTrackingIntervalMillis
kotlinx.coroutines.android.HandlerContext
io.sentry.SentryOptions: java.lang.Long getIdleTimeout()
io.sentry.android.core.SentryAndroidOptions: long getStartupCrashFlushTimeoutMillis()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
kotlinx.coroutines.JobSupport$ChildCompletion
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeBreadcrumbCallback beforeBreadcrumb
io.sentry.flutter.R$string: int status_bar_notification_info_overflow
androidx.window.core.Bounds: int getBottom()
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation PORTRAIT
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.appcompat.widget.FitWindowsLinearLayout
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource COMPONENT
io.sentry.flutter.R$attr: int fontVariationSettings
androidx.window.core.Version: int getPatch()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.lifecycle.SingleGeneratedAdapterObserver
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration DAY
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.window.R$id: int locale
io.sentry.android.core.SentryAndroidOptions: int profilingTracesHz
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
io.sentry.flutter.R$styleable: int FontFamilyFont_ttcIndex
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableFramesTracking()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.sentry.flutter.R$drawable: int notification_bg_low
androidx.core.graphics.drawable.IconCompat
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatButton
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.R$styleable: int ActivityFilter_activityAction
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
io.sentry.DataCategory: io.sentry.DataCategory All
io.sentry.protocol.DebugImage: java.lang.Long getImageSize()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
io.sentry.SentryOptions: boolean isEnableScopeSync()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration[] $VALUES
io.sentry.SentryItemType: io.sentry.SentryItemType Attachment
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
io.sentry.flutter.R$id: int tag_unhandled_key_event_manager
androidx.window.core.Version: boolean equals(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
io.sentry.SentryOptions: java.util.Map tags
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.sentry.flutter.R$styleable: int[] SplitPairRule
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppComponentBreadcrumbs()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.SentryItemType: io.sentry.SentryItemType resolve(java.lang.Object)
io.sentry.SpanStatus: io.sentry.SpanStatus[] $VALUES
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
androidx.appcompat.widget.DialogTitle
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$6: void invoke(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.window.embedding.SplitRule$Api30Impl
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.sentry.SentryOptions: java.util.List defaultTracePropagationTargets
io.sentry.SentryOptions: io.sentry.ISerializer getSerializer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
io.sentry.flutter.R$styleable: int SplitPairFilter_primaryActivityName
io.sentry.flutter.R$styleable: int ActivityRule_alwaysExpand
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
io.sentry.SentryItemType: java.lang.String getItemType()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.android.gms.common.api.GoogleApiActivity
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
io.sentry.flutter.R$id: int accessibility_custom_action_23
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
kotlin.jvm.internal.CallableReference: boolean isFinal()
io.sentry.SentryOptions: boolean isEnableUncaughtExceptionHandler()
androidx.window.R$id: int ltr
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
io.sentry.flutter.R$id: int accessibility_custom_action_18
io.sentry.flutter.R$styleable
androidx.window.R$attr: int activityName
androidx.window.embedding.SplitRule
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NAME
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status[] $VALUES
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
io.sentry.flutter.R$styleable: int[] FontFamilyFont
io.sentry.flutter.R$color
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
io.sentry.flutter.R$layout: int notification_template_part_time
androidx.window.embedding.SplitInfo: float getSplitRatio()
io.sentry.flutter.R$layout: int custom_dialog
io.sentry.protocol.DebugImage: java.lang.Long imageSize
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
android.support.v4.app.RemoteActionCompatParcelizer
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingRule
io.sentry.SentryOptions: int maxDepth
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
io.flutter.plugins.urllauncher.WebViewActivity
io.sentry.flutter.R$styleable: int SplitPairFilter_secondaryActivityAction
io.sentry.SentryOptions: void addInAppInclude(java.lang.String)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
io.sentry.Session$State: io.sentry.Session$State Exited
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.sentry.protocol.DebugImage: java.lang.String getCodeId()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
io.sentry.SpanStatus: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
androidx.window.core.Bounds: boolean isZero()
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason BEFORE_SEND
io.sentry.SentryOptions: int getMaxDepth()
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
io.sentry.flutter.R$id: int accessibility_custom_action_16
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
io.sentry.flutter.R$integer: int status_bar_notification_info_maxnum
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
io.sentry.SentryOptions: long getSessionTrackingIntervalMillis()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
kotlin.jvm.internal.FunctionReference: int flags
kotlinx.coroutines.CancelledContinuation
androidx.window.java.R
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
io.sentry.flutter.R$id: int notification_background
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.R$attr: int splitRatio
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
io.sentry.flutter.R$id: int line1
io.sentry.protocol.DebugImage: void setImageSize(long)
io.sentry.flutter.R$styleable: int GradientColor_android_gradientRadius
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
io.sentry.SentryOptions: java.util.Set ignoredExceptionsForType
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
io.sentry.flutter.R$string: R$string()
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.layout.WindowMetricsCalculator
io.sentry.flutter.R$drawable: int notification_bg_normal
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MILLISECOND
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.sentry.android.core.SentryAndroidOptions: void setCollectAdditionalContext(boolean)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
androidx.window.core.Version: java.lang.String getDescription()
io.sentry.protocol.DebugImage: java.lang.String getType()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
io.sentry.SentryOptions: boolean enableExternalConfiguration
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.window.embedding.SplitPairRule: boolean clearTop
io.sentry.android.core.SentryAndroidOptions: void setEnableAppComponentBreadcrumbs(boolean)
io.sentry.flutter.SentryFlutterPlugin: void initNativeSdk(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.sentry.SentryOptions: void setMaxTraceFileSize(long)
io.sentry.protocol.DebugImage: java.lang.String access$402(io.sentry.protocol.DebugImage,java.lang.String)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.sentry.flutter.R$id: int rtl
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.window.core.Version: int getMajor()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.window.embedding.SplitInfo: int hashCode()
io.sentry.SentryOptions: java.lang.Double tracesSampleRate
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks
kotlinx.coroutines.CompletedExceptionally
androidx.window.embedding.SplitRule: int minWidth
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
io.sentry.protocol.Device$DeviceOrientation: io.sentry.protocol.Device$DeviceOrientation LANDSCAPE
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
io.sentry.SentryOptions: java.lang.String serverName
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.sentry.SentryOptions: java.lang.String getDist()
io.sentry.SentryOptions: io.sentry.cache.IEnvelopeCache envelopeDiskCache
io.sentry.flutter.R$drawable: int notification_icon_background
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.savedstate.Recreator
io.sentry.protocol.DebugImage: java.lang.String getDebugId()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.sentry.flutter.BuildConfig: java.lang.String BUILD_TYPE
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: java.lang.String description
io.sentry.flutter.R$attr: R$attr()
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitMinWidth
io.sentry.protocol.DebugImage: java.lang.String getImageAddr()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.sentry.flutter.R$id: int tag_accessibility_clickable_spans
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.sentry.SentryOptions: long maxAttachmentSize
androidx.window.layout.EmptyDecorator: EmptyDecorator()
io.sentry.flutter.R$drawable: int notification_template_icon_low_bg
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.internal.ThreadSafeHeap
io.sentry.SentryOptions: boolean enableUncaughtExceptionHandler
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.sentry.flutter.R$dimen: int notification_large_icon_height
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
io.sentry.flutter.R$attr: int alwaysExpand
io.sentry.flutter.R$styleable: int GradientColor_android_startY
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
io.sentry.android.core.SentryAndroidOptions: void enableAllAutoBreadcrumbs(boolean)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.internal.AtomicOp
androidx.window.core.Version: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
io.sentry.protocol.DebugImage: java.lang.String uuid
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.sentry.flutter.R$id: int ltr
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
io.sentry.SpanStatus: io.sentry.SpanStatus OUT_OF_RANGE
androidx.core.app.RemoteActionCompat
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.sentry.SentryOptions: void setDiagnosticLevel(io.sentry.SentryLevel)
io.sentry.SpanStatus: io.sentry.SpanStatus ALREADY_EXISTS
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
androidx.window.embedding.ActivityFilter: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.athmanytec.alqimma.app.MainActivity: MainActivity()
io.sentry.flutter.R$drawable: int notify_panel_notification_icon_bg
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_OBJECT
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.sentry.flutter.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
io.sentry.flutter.R$id: int tag_state_description
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.recyclerview.widget.LinearLayoutManager
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Line2
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken valueOf(java.lang.String)
io.sentry.flutter.R$styleable: int GradientColor_android_type
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
io.sentry.SentryOptions: int getReadTimeoutMillis()
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.window.core.Version: int getMinor()
io.sentry.SentryOptions: void setMaxCacheItems(int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
io.sentry.SentryOptions: io.sentry.SentryOptions$BeforeSendCallback getBeforeSend()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
io.sentry.SentryItemType: io.sentry.SentryItemType valueOf(java.lang.String)
io.sentry.flutter.R: R()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
io.sentry.android.core.SentryPerformanceProvider: SentryPerformanceProvider()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.sentry.SentryOptions: java.lang.String dsnHash
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
io.sentry.SentryOptions: java.lang.String getRelease()
io.sentry.android.core.SentryAndroidOptions: boolean attachScreenshot
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: SentryFlutterPlugin$initNativeSdk$2$11(io.sentry.android.core.SentryAndroidOptions)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$8: SentryFlutterPlugin$initNativeSdk$2$8(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.R$styleable: int FontFamily_fontProviderPackage
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.sentry.SentryOptions: long getMaxAttachmentSize()
io.sentry.SentryOptions: java.util.Set getIgnoredExceptionsForType()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.core.app.FrameMetricsAggregator
io.sentry.protocol.DebugImage: java.lang.String getDebugFile()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.core.Bounds: int top
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration MINUTE
io.sentry.android.core.SentryAndroidOptions: long startupCrashFlushTimeoutMillis
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.sentry.SentryOptions: void setProfilesSampleRate(java.lang.Double)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.window.R$attr: int splitLayoutDirection
io.sentry.flutter.R$id: int tag_unhandled_key_listeners
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.embedding.EmbeddingAdapter
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.appcompat.widget.AppCompatRadioButton
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.android.gms.location.zzae: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
io.sentry.vendor.gson.stream.JsonToken
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$11: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN_ERROR
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.widget.AppCompatImageView
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
io.sentry.flutter.R$styleable: int GradientColor_android_centerY
io.sentry.SentryOptions: void setProxy(io.sentry.SentryOptions$Proxy)
androidx.appcompat.widget.ButtonBarLayout
io.sentry.protocol.DebugImage: void setUnknown(java.util.Map)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.multidex.MultiDexApplication
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
io.sentry.android.core.SentryAndroidOptions: boolean isAnrReportInDebug()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
kotlinx.coroutines.internal.DispatchedContinuation
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information[] values()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.sentry.SentryOptions: java.lang.String distinctId
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
io.sentry.flutter.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
io.sentry.DataCategory: io.sentry.DataCategory Unknown
io.sentry.flutter.R$id: int accessibility_action_clickable_span
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
io.sentry.flutter.R$styleable: int SplitPairRule_splitRatio
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason EVENT_PROCESSOR
kotlinx.coroutines.BlockingEventLoop
io.sentry.SentryOptions: int maxBreadcrumbs
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.core.Bounds: int getRight()
io.sentry.SentryOptions: void setSampleRate(java.lang.Double)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback getProfilesSampler()
io.sentry.SentryOptions: void setDsn(java.lang.String)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
io.sentry.SentryItemType: io.sentry.SentryItemType Unknown
kotlinx.coroutines.NodeList
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.window.layout.FoldingFeature
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: void invoke(boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore
io.sentry.flutter.R$drawable
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.sentry.flutter.R$attr: int fontProviderQuery
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.sentry.SentryOptions: io.sentry.ISerializer serializer
io.sentry.flutter.R$id
androidx.window.layout.SidecarAdapter
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information EXBIBYTE
io.flutter.view.AccessibilityViewEmbedder
androidx.window.embedding.ActivityRule: int hashCode()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
io.sentry.SentryOptions: void setTracePropagationTargets(java.util.List)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
io.sentry.flutter.R$drawable: int notification_bg
kotlinx.coroutines.CancellableContinuationImpl: int _decision
io.sentry.flutter.R$id: int accessibility_custom_action_0
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
io.sentry.flutter.R$drawable: int notification_bg_low_normal
androidx.window.embedding.ExtensionEmbeddingBackend
io.sentry.android.core.SentryAndroidOptions: boolean isEnableUserInteractionTracing()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.sentry.SentryItemType: io.sentry.SentryItemType Profile
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
io.sentry.SentryOptions: boolean enableScopeSync
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.sentry.protocol.DebugImage: void setImageSize(java.lang.Long)
com.athmanytec.alqimma.app.MainActivity
io.sentry.SentryOptions: boolean containsIgnoredExceptionForType(java.lang.Throwable)
androidx.window.embedding.SplitController
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction[] values()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.sentry.android.core.SentryAndroidOptions: boolean isAttachScreenshot()
androidx.window.layout.SidecarCompat$FirstAttachAdapter
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
kotlinx.coroutines.CompletionHandlerBase
io.sentry.SentryOptions: io.sentry.ITransactionProfiler getTransactionProfiler()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.appcompat.widget.AppCompatCheckBox
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource URL
androidx.window.layout.HardwareFoldingFeature$Type
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: void invoke(java.lang.String)
io.sentry.SentryOptions: SentryOptions(boolean)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
io.sentry.flutter.R$id: int tag_accessibility_pane_title
io.sentry.flutter.R$dimen: int notification_subtext_size
androidx.appcompat.view.menu.ActionMenuItemView
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
io.sentry.SentryOptions: long flushTimeoutMillis
io.sentry.flutter.SentryFlutterPlugin: void fetchNativeAppStart(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.sentry.SentryItemType: io.sentry.SentryItemType UserFeedback
androidx.window.core.Bounds: java.lang.String toString()
androidx.window.layout.SidecarCompat$Companion
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.sentry.SentryOptions: void setSendDefaultPii(boolean)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$16: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.sentry.SpanStatus: io.sentry.SpanStatus PERMISSION_DENIED
kotlinx.coroutines.channels.RendezvousChannel
io.sentry.flutter.R$id: int accessibility_custom_action_9
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.sentry.clientreport.DiscardReason: DiscardReason(java.lang.String,int,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.sentry.android.core.SentryAndroidOptions: boolean enableUserInteractionTracing
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: io.sentry.android.core.SentryAndroidOptions $options
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
io.sentry.MeasurementUnit$Fraction
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
kotlin.jvm.internal.Lambda: int arity
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
io.sentry.android.core.SentryAndroidOptions: void setEnableAppLifecycleBreadcrumbs(boolean)
io.sentry.flutter.R$integer
io.sentry.flutter.R$id: int icon
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason[] $VALUES
io.sentry.DataCategory: io.sentry.DataCategory Default
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
io.sentry.flutter.R$dimen: int notification_top_pad_large_text
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion getSdkVersion()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.SentryFlutterPlugin: void setEventOriginTag(io.sentry.SentryEvent)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken END_DOCUMENT
io.sentry.flutter.R$dimen: int notification_right_side_padding_top
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.sentry.flutter.R$id: int action_divider
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
io.sentry.flutter.R$id: int accessibility_custom_action_21
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.sentry.SentryOptions: void setCacheDirPath(java.lang.String)
io.sentry.flutter.R$dimen: int compat_notification_large_icon_max_width
kotlinx.coroutines.AbstractCoroutine
androidx.lifecycle.ProcessLifecycleOwner$3$1: ProcessLifecycleOwner$3$1(androidx.lifecycle.ProcessLifecycleOwner$3)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$1: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.sentry.android.core.SentryAndroidOptions: boolean isAnrEnabled()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
io.sentry.protocol.DebugImage: void setArch(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$7
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.sentry.flutter.R$id: int accessibility_custom_action_12
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
io.sentry.SentryItemType: SentryItemType(java.lang.String,int,java.lang.String)
io.sentry.flutter.BuildConfig
io.sentry.flutter.R$id: int line3
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.window.embedding.SplitController: boolean sDebug
io.sentry.SentryOptions: java.util.List getEventProcessors()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActivityChooserView$InnerLayout
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Info
io.sentry.flutter.R$id: int accessibility_custom_action_8
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.window.embedding.SplitRule: float splitRatio
androidx.lifecycle.ProcessLifecycleOwnerInitializer
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Title
androidx.window.layout.SidecarAdapter: java.lang.String TAG
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: java.lang.Object invoke(java.lang.Object)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.sentry.protocol.DebugImage: void setCodeFile(java.lang.String)
io.sentry.flutter.SentryFlutterPlugin: void setEventEnvironmentTag$default(io.sentry.flutter.SentryFlutterPlugin,io.sentry.SentryEvent,java.lang.String,java.lang.String,int,java.lang.Object)
io.sentry.flutter.R$id: int accessibility_custom_action_19
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: java.lang.Object invoke(java.lang.Object)
io.sentry.DataCategory: io.sentry.DataCategory UserReport
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
io.sentry.SentryOptions: boolean isSendDefaultPii()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken NUMBER
io.sentry.SentryOptions: void setExecutorService(io.sentry.ISentryExecutorService)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BOOLEAN
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
io.sentry.android.core.SentryAndroidOptions: void setAnrReportInDebug(boolean)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.sentry.SentryOptions: long getShutdownTimeout()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.sentry.flutter.R$styleable: int FontFamilyFont_android_ttcIndex
io.sentry.SentryOptions: boolean isEnableDeduplication()
io.sentry.DataCategory: io.sentry.DataCategory[] values()
io.sentry.flutter.SentryFlutterPlugin: SentryFlutterPlugin()
kotlinx.coroutines.ChildContinuation
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.channels.AbstractChannel
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: SentryFlutterPlugin$initNativeSdk$2$17(io.sentry.android.core.SentryAndroidOptions)
kotlin.jvm.internal.Lambda: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$2
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.sentry.SentryLevel: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
io.sentry.flutter.R$attr: int fontStyle
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
kotlinx.coroutines.internal.LockFreeLinkedListNode
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.window.embedding.SplitRule: int minSmallestWidth
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
androidx.versionedparcelable.ParcelImpl
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason RATELIMIT_BACKOFF
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
io.sentry.SentryOptions: boolean isTracingEnabled()
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
io.sentry.SentryOptions: java.util.Map getTags()
kotlin.jvm.internal.CallableReference: java.lang.String signature
io.sentry.clientreport.DiscardReason: java.lang.String reason
androidx.window.core.Version: int hashCode()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
io.sentry.flutter.R$styleable: int FontFamily_fontProviderCerts
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
io.sentry.SentryOptions: io.sentry.ITransactionProfiler transactionProfiler
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$9: java.lang.Object invoke(java.lang.Object)
io.sentry.Session$State: io.sentry.Session$State Crashed
io.sentry.DataCategory: io.sentry.DataCategory Session
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$10: SentryFlutterPlugin$initNativeSdk$2$10(io.sentry.android.core.SentryAndroidOptions)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.sentry.flutter.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.sentry.protocol.DebugImage: java.util.Map unknown
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.window.embedding.SplitPairRule
io.sentry.clientreport.DiscardReason: java.lang.String getReason()
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.view.ScrollingView
io.sentry.SentryOptions: java.lang.String getDistinctId()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
io.sentry.SentryLevel: io.sentry.SentryLevel WARNING
io.sentry.android.core.SentryAndroidOptions: void setEnableAutoActivityLifecycleTracing(boolean)
io.sentry.flutter.SentryFlutterPluginKt: void getIfNotNull(java.util.Map,java.lang.String,kotlin.jvm.functions.Function1)
io.sentry.flutter.R$id: int accessibility_custom_action_20
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
io.sentry.flutter.R$id: int locale
io.sentry.SentryOptions: io.sentry.SentryLevel DEFAULT_DIAGNOSTIC_LEVEL
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
io.sentry.SentryOptions: void setPrintUncaughtStackTrace(boolean)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information PETABYTE
io.sentry.SentryOptions: void setReadTimeoutMillis(int)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
kotlinx.coroutines.InvokeOnCompletion
io.sentry.flutter.R$styleable: int ActivityFilter_activityAction
io.sentry.SentryOptions: void setConnectionTimeoutMillis(int)
io.sentry.SpanStatus: io.sentry.SpanStatus fromHttpStatusCode(java.lang.Integer,io.sentry.SpanStatus)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.sentry.Session$State: io.sentry.Session$State valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.sentry.SentryLevel: io.sentry.SentryLevel FATAL
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.sentry.SentryItemType: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
androidx.window.embedding.SplitInfo
io.sentry.SpanStatus: io.sentry.SpanStatus UNKNOWN
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.core.Version$Companion
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
io.sentry.SentryOptions: io.sentry.SentryLevel diagnosticLevel
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize ALWAYS
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status valueOf(java.lang.String)
androidx.window.R$styleable: int[] SplitPairFilter
io.sentry.SentryOptions: void setBeforeBreadcrumb(io.sentry.SentryOptions$BeforeBreadcrumbCallback)
io.sentry.flutter.R$attr: int activityAction
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
androidx.window.embedding.ActivityStack
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
io.sentry.protocol.TransactionNameSource: java.lang.String apiName()
androidx.window.embedding.SplitRule: int hashCode()
androidx.window.layout.SidecarAdapter$Companion
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
io.sentry.flutter.R$dimen: int notification_top_pad
io.sentry.SentryOptions: java.util.List getInAppIncludes()
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.sentry.MeasurementUnit$Information: io.sentry.MeasurementUnit$Information TEBIBYTE
io.flutter.embedding.engine.FlutterJNI
androidx.appcompat.widget.SearchView
io.sentry.flutter.SentryFlutterPlugin: void setContexts$lambda-3(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result,io.sentry.Scope)
io.sentry.DataCategory: java.lang.String category
androidx.appcompat.widget.ViewStubCompat
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.window.embedding.SplitInfo: float splitRatio
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.sentry.protocol.TransactionNameSource: TransactionNameSource(java.lang.String,int)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
io.sentry.Session$State: io.sentry.Session$State Abnormal
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.sentry.DataCategory: io.sentry.DataCategory Transaction
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$14: void invoke(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
io.sentry.flutter.R$id: int accessibility_custom_action_5
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
androidx.appcompat.view.menu.ExpandedMenuView
io.sentry.flutter.R$drawable: int notification_template_icon_bg
androidx.window.layout.SidecarWindowBackend$Companion
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.sentry.flutter.R$color: int secondary_text_default_material_light
io.sentry.MeasurementUnit$Duration: java.lang.String apiName()
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
io.sentry.MeasurementUnit$Fraction: MeasurementUnit$Fraction(java.lang.String,int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
io.sentry.SentryOptions: void setEnableAutoSessionTracking(boolean)
io.sentry.android.core.SentryAndroidOptions: void setProfilingTracesIntervalMillis(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
io.sentry.SentryOptions: java.util.List getTracingOrigins()
io.sentry.flutter.R$styleable: int[] SplitPlaceholderRule
androidx.recyclerview.widget.GridLayoutManager
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
io.sentry.SentryOptions: boolean enableShutdownHook
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.sentry.SentryOptions: boolean isTraceSampling()
io.sentry.flutter.R$attr: int fontProviderSystemFontFamily
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize[] $VALUES
io.sentry.SentryOptions: int readTimeoutMillis
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
io.sentry.SentryOptions: long maxTraceFileSize
androidx.window.R$attr: int primaryActivityName
androidx.window.R
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
io.sentry.SentryOptions: boolean isPrintUncaughtStackTrace()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
io.sentry.SentryOptions: boolean isEnableAutoSessionTracking()
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.sentry.SentryOptions: io.sentry.SentryOptions$ProfilesSamplerCallback profilesSampler
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
io.sentry.protocol.DebugImage: void setImageAddr(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.window.embedding.SplitRule: SplitRule()
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize SMALL
androidx.appcompat.widget.AppCompatTextView
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$12: SentryFlutterPlugin$initNativeSdk$2$12(io.sentry.android.core.SentryAndroidOptions)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
androidx.window.embedding.SplitRuleParser
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
io.sentry.android.core.internal.util.ConnectivityChecker$Status: io.sentry.android.core.internal.util.ConnectivityChecker$Status CONNECTED
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
io.sentry.android.core.SentryAndroidOptions: boolean enableSystemEventBreadcrumbs
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
io.sentry.SentryOptions: io.sentry.transport.ITransportGate transportGate
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
io.sentry.SentryOptions: boolean isEnableExternalConfiguration()
io.sentry.android.core.SentryAndroidOptions: io.sentry.android.core.IDebugImagesLoader debugImagesLoader
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
io.sentry.flutter.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.Closed
io.sentry.flutter.R$layout: int notification_action
io.sentry.flutter.R$attr: int placeholderActivityName
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
io.sentry.flutter.R$color: int notification_icon_bg_color
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.sentry.SentryOptions: int getMaxSpans()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
io.sentry.flutter.SentryFlutterPlugin: void addPackages(io.sentry.SentryEvent,io.sentry.protocol.SdkVersion)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
io.sentry.SentryOptions: void setMaxRequestBodySize(io.sentry.SentryOptions$RequestSize)
com.google.android.gms.internal.location.zzbd: android.os.Parcelable$Creator CREATOR
io.sentry.flutter.SentryFlutterPlugin: void removeContexts$lambda-4(java.lang.String,io.flutter.plugin.common.MethodChannel$Result,io.sentry.Scope)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
io.sentry.DataCategory: io.sentry.DataCategory[] $VALUES
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
io.sentry.flutter.R$styleable: int ActivityFilter_activityName
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
kotlinx.coroutines.internal.LockFreeLinkedListHead
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
io.sentry.SpanStatus: io.sentry.SpanStatus UNAUTHENTICATED
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.sentry.flutter.R$layout: R$layout()
io.sentry.SentryOptions: java.util.List getContextTags()
io.sentry.SentryOptions: boolean enableAutoSessionTracking
io.sentry.flutter.R$styleable: int SplitPairRule_splitMinWidth
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.lifecycle.Lifecycling$1
io.sentry.SentryOptions: int getMaxBreadcrumbs()
androidx.window.embedding.SplitPairFilter
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.sentry.flutter.R$layout: int notification_template_part_chronometer
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
androidx.window.embedding.SplitPlaceholderRule
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
io.sentry.flutter.R$styleable: int[] FontFamily
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.window.embedding.ActivityFilter: java.lang.String toString()
io.sentry.flutter.R$attr: int primaryActivityName
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
io.sentry.flutter.R$drawable: int notification_action_background
androidx.window.core.Bounds: int getWidth()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
io.sentry.DataCategory: DataCategory(java.lang.String,int,java.lang.String)
io.sentry.flutter.R$id: int accessibility_custom_action_28
io.sentry.flutter.SentryFlutterPlugin
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
io.sentry.SentryOptions: void setEnableNdk(boolean)
kotlinx.coroutines.scheduling.GlobalQueue
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.sentry.flutter.SentryFlutterPlugin: void setEventEnvironmentTag(io.sentry.SentryEvent,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.sentry.flutter.SentryFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.layout.SidecarCompat$TranslatingCallback
io.sentry.android.core.SentryAndroidOptions: boolean isEnableAppLifecycleBreadcrumbs()
io.sentry.flutter.SentryFlutterPlugin: void setUser(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.lifecycle.ProcessLifecycleOwner
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
io.sentry.flutter.R$attr: int nestedScrollViewStyle
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: java.lang.Object invoke(java.lang.Object)
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason NETWORK_ERROR
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: io.sentry.android.core.SentryAndroidOptions $options
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
io.sentry.android.core.SentryAndroidOptions: boolean enableActivityLifecycleTracingAutoFinish
io.sentry.SentryOptions: void setFlushTimeoutMillis(long)
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
io.sentry.flutter.R$id: int icon_group
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
io.sentry.SentryOptions: void setRelease(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.sentry.flutter.R$id: int text
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.sentry.flutter.R$dimen: int notification_media_narrow_margin
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
io.sentry.android.ndk.SentryNdk: void close()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.embedding.ActivityStack: int hashCode()
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize NONE
io.sentry.flutter.R$style
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.sentry.protocol.DebugImage: java.lang.String access$502(io.sentry.protocol.DebugImage,java.lang.String)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
androidx.window.core.Bounds: Bounds(int,int,int,int)
io.sentry.flutter.SentryFlutterPlugin: void clearBreadcrumbs(io.flutter.plugin.common.MethodChannel$Result)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SentryOptions: javax.net.ssl.HostnameVerifier getHostnameVerifier()
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.sentry.SentryOptions: io.sentry.SentryOptions$Proxy proxy
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
io.sentry.SentryOptions$RequestSize: io.sentry.SentryOptions$RequestSize MEDIUM
androidx.appcompat.widget.ContentFrameLayout
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
io.sentry.flutter.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.appcompat.app.AlertController$RecycleListView
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken BEGIN_ARRAY
io.sentry.flutter.R$styleable: int GradientColorItem_android_offset
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.window.layout.HardwareFoldingFeature$Type$Companion
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.sentry.SentryOptions: java.util.List integrations
io.sentry.flutter.SentryFlutterPlugin: android.content.Context context
com.sunmi.peripheral.printer.SystemPropertyUtil
io.sentry.SentryOptions: java.lang.String dsn
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$18: io.sentry.android.core.SentryAndroidOptions $options
kotlinx.coroutines.scheduling.CoroutineScheduler
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
io.sentry.vendor.gson.stream.JsonToken: JsonToken(java.lang.String,int)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
io.sentry.flutter.BuildConfig: BuildConfig()
io.sentry.SentryOptions: io.sentry.protocol.SdkVersion createSdkVersion()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.R$attr: int secondaryActivityAction
io.sentry.SentryOptions: java.util.List getInAppExcludes()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.sentry.SentryOptions: void setTracesSampler(io.sentry.SentryOptions$TracesSamplerCallback)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$5: void invoke(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.sentry.flutter.SentryFlutterPlugin: void endNativeFrames(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.sentry.android.core.SentryAndroidOptions: SentryAndroidOptions()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$13: io.sentry.android.core.SentryAndroidOptions $options
io.sentry.SpanStatus: boolean matches(int)
io.sentry.SentryOptions: boolean isDebug()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
io.sentry.SpanStatus: io.sentry.SpanStatus[] values()
io.sentry.SentryOptions: java.lang.String getProfilingTracesDirPath()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
io.sentry.SentryOptions: int connectionTimeoutMillis
io.sentry.SentryOptions: void setProfilesSampler(io.sentry.SentryOptions$ProfilesSamplerCallback)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
io.sentry.SentryOptions: void setSendClientReports(boolean)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.sentry.flutter.R$attr: int fontWeight
androidx.window.R$attr: int placeholderActivityName
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
io.sentry.SentryOptions: void setBeforeSend(io.sentry.SentryOptions$BeforeSendCallback)
io.sentry.flutter.R$id: int notification_main_column
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
io.sentry.flutter.R$style: int Widget_Compat_NotificationActionText
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.window.core.Bounds: android.graphics.Rect toRect()
io.sentry.android.ndk.SentryNdk: void shutdown()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
kotlinx.coroutines.android.AndroidExceptionPreHandler
io.sentry.flutter.R$id: int notification_main_column_container
io.sentry.android.core.SentryAndroidOptions: boolean isEnableSystemEventBreadcrumbs()
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.window.layout.ExtensionInterfaceCompat
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
io.sentry.flutter.R$style: R$style()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
io.sentry.flutter.R$dimen: int notification_action_icon_size
io.sentry.flutter.R$styleable: int Capability_queryPatterns
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
io.sentry.protocol.DebugImage: java.lang.String codeId
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
io.sentry.protocol.DebugImage: void serialize(io.sentry.JsonObjectWriter,io.sentry.ILogger)
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.sentry.android.ndk.SentryNdk: SentryNdk()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
io.sentry.SentryOptions: boolean isSendClientReports()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.window.core.Bounds: boolean isEmpty()
io.sentry.flutter.R$id: int accessibility_custom_action_2
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
io.sentry.flutter.R$dimen: int compat_button_padding_horizontal_material
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: io.sentry.android.core.SentryAndroidOptions $options
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.window.layout.WindowLayoutInfo: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.sentry.SentryOptions: io.sentry.SentryOptions$TracesSamplerCallback getTracesSampler()
io.sentry.MeasurementUnit$Duration: io.sentry.MeasurementUnit$Duration SECOND
io.sentry.flutter.R$style: int TextAppearance_Compat_Notification_Time
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
io.sentry.android.core.SentryAndroidOptions: boolean isEnableUserInteractionBreadcrumbs()
io.sentry.MeasurementUnit$Duration
io.sentry.SentryOptions: int getConnectionTimeoutMillis()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.sentry.flutter.R$attr: int secondaryActivityAction
io.sentry.SentryOptions: boolean attachServerName
io.sentry.protocol.DebugImage: void setDebugId(java.lang.String)
io.flutter.view.FlutterCallbackInformation
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
io.sentry.clientreport.DiscardReason
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
io.sentry.SentryItemType: io.sentry.SentryItemType ClientReport
kotlinx.coroutines.internal.ScopeCoroutine
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
io.sentry.clientreport.DiscardReason: io.sentry.clientreport.DiscardReason valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.sentry.android.ndk.SentryNdk
io.sentry.SentryOptions: boolean debug
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
io.sentry.flutter.R$styleable: int SplitPairRule_splitLayoutDirection
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource valueOf(java.lang.String)
androidx.multidex.MultiDexApplication: MultiDexApplication()
io.sentry.SentryOptions: boolean enableNdk
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$17: java.lang.Object invoke(java.lang.Object)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
io.sentry.SentryOptions: java.util.List contextTags
io.sentry.SentryOptions: javax.net.ssl.HostnameVerifier hostnameVerifier
io.sentry.SpanStatus: int maxHttpStatusCode
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
io.sentry.vendor.gson.stream.JsonToken: io.sentry.vendor.gson.stream.JsonToken[] values()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.sentry.android.core.LifecycleWatcher
io.sentry.SentryOptions: long getShutdownTimeoutMillis()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
io.sentry.android.core.SentryAndroidOptions: void setProfilingTracesHz(int)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
io.sentry.flutter.R$styleable: int[] ActivityRule
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
io.sentry.MeasurementUnit$Fraction: io.sentry.MeasurementUnit$Fraction PERCENT
com.google.android.gms.signin.internal.zah: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
io.sentry.android.core.SentryAndroidOptions: void setAnrTimeoutIntervalMillis(long)
io.sentry.flutter.SentryFlutterPlugin: boolean writeEnvelope(byte[])
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
io.sentry.SentryOptions: java.lang.String getEnvironment()
androidx.window.embedding.SplitRule$LayoutDir
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
io.sentry.flutter.R$styleable: int Capability_shortcutMatchRequired
androidx.window.layout.WindowBackend
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.sentry.SentryLevel: io.sentry.SentryLevel[] $VALUES
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.window.embedding.SplitPairRule: int hashCode()
io.sentry.protocol.TransactionNameSource: io.sentry.protocol.TransactionNameSource VIEW
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.window.embedding.EmbeddingInterfaceCompat
io.sentry.SentryOptions: void setServerName(java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
kotlinx.coroutines.channels.AbstractSendChannel
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.sentry.flutter.SentryFlutterPlugin: void access$setAutoPerformanceTrackingEnabled$p(io.sentry.flutter.SentryFlutterPlugin,boolean)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$3
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
kotlin.jvm.internal.Lambda: int getArity()
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$15: SentryFlutterPlugin$initNativeSdk$2$15(io.sentry.android.core.SentryAndroidOptions)
io.sentry.flutter.SentryFlutterPlugin$initNativeSdk$2$19: SentryFlutterPlugin$initNativeSdk$2$19(io.sentry.android.core.SentryAndroidOptions)
androidx.window.R$attr: int splitMinSmallestWidth
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.sentry.SentryOptions: boolean attachThreads
io.sentry.SentryOptions: javax.net.ssl.SSLSocketFactory getSslSocketFactory()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
